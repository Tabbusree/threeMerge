<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="20" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-28T11:12:44 IST" name="Surefire suite" finished-at="2023-11-28T11:19:34 IST" duration-ms="409417">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-11-28T11:12:44 IST" name="Surefire test" finished-at="2023-11-28T11:19:34 IST" duration-ms="409417">
      <class name="runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:12:44 IST" name="setUpClass" finished-at="2023-11-28T11:12:45 IST" duration-ms="751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3022287e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:12:45 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:13:11 IST" duration-ms="25893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Missing the mandatory fields intentionally in new patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the billing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:13:11 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:13:31 IST" duration-ms="19761" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["checking the new patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the billing Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:87)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertTrue(Assert.java:53)
at com.stepdefinition.AdminLoginStepDefinition.assert_the_successfull_message(AdminLoginStepDefinition.java:105)
at ✽.Assert the successfull message(file:///C:/PathuFolder/Explions/smartHospital/src/test/resources/Features/Billing.feature:25)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:13:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:13:56 IST" duration-ms="24842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking the mandatory fields for the new patient details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the billing Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:13:56 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:14:35 IST" duration-ms="39467" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Intentionally failing in billig module"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the billing Module"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //li[text()='Consultation Fees ']' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //li[text()='Consultation Fees ']' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at com.actions.BillingActions.missMandatoryField(BillingActions.java:107)
at com.stepdefinition.AdminLoginStepDefinition.missing_mandatory_fields_only(AdminLoginStepDefinition.java:74)
at ✽.Missing Mandatory fields only(file:///C:/PathuFolder/Explions/smartHospital/src/test/resources/Features/Billing.feature:47)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//li[text()='Consultation Fees ']"}
  (Session info: chrome=114.0.5735.199)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.14.1', revision: '03f8ede370'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2117512b46a6be2bed17ced5e6a29a73, findElement {using=xpath, value=//li[text()='Consultation Fees ']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.199, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, goog:chromeOptions: {debuggerAddress: localhost:59545}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59545/devtoo..., se:cdpVersion: 114.0.5735.199, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2117512b46a6be2bed17ced5e6a29a73
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy36.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:205)
at com.actions.BillingActions.missMandatoryField(BillingActions.java:107)
at com.stepdefinition.AdminLoginStepDefinition.missing_mandatory_fields_only(AdminLoginStepDefinition.java:74)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
at io.cucumber.java.Invoker.invoke(Invoker.java:24)
at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)
at io.cucumber.core.runner.TestStep.run(TestStep.java:56)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:84)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:102)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:91)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:14:35 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:14:51 IST" duration-ms="15860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Enter all fields in front office as visitor and save"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Front office Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:14:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:15:05 IST" duration-ms="13770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Missing the mandatory fields intentionally in new patient for front office"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Front office Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:15:05 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:15:19 IST" duration-ms="14416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Enter all fields in front office as inquiry and save"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Front office Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:15:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:15:33 IST" duration-ms="14257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Enter all fields in front office as  seminar and save"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Front office Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:15:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:15:46 IST" duration-ms="13035" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Missing the mandatory fields intentionally in new patient for OutPatient office"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Inpatient Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:15:46 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:15:58 IST" duration-ms="11897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["checking the new patient at out patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Inpatient Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:15:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:16:15 IST" duration-ms="17015" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking the mandatory fields for the new patient details in Inpatient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Inpatient Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:87)
at org.junit.Assert.assertTrue(Assert.java:42)
at org.junit.Assert.assertTrue(Assert.java:53)
at com.stepdefinition.AdminLoginStepDefinition.checks_the_name_in_inpatient(AdminLoginStepDefinition.java:280)
at ✽.checks the name in Inpatient(file:///C:/PathuFolder/Explions/smartHospital/src/test/resources/Features/Inpatient.feature:31)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:16:15 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:16:42 IST" duration-ms="26723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Intentionally failing in InPatient module"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Inpatient Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:16:42 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:17:01 IST" duration-ms="19164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing Appointment Functionlaity"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing the functionality of the smart hospital"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:17:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:17:16 IST" duration-ms="14259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing Pharmacy Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing the functionality of the smart hospital"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:17:16 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:17:29 IST" duration-ms="13639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Testing Calendar Functionality"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Testing the functionality of the smart hospital"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:17:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:17:41 IST" duration-ms="11937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Missing the mandatory fields intentionally in new patient for OutPatient office"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Outpatient Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:17:41 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:17:53 IST" duration-ms="12140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["checking the new patient at out patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Outpatient Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:17:53 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:18:10 IST" duration-ms="16885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking the mandatory fields for the new patient details in outpatient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Outpatient Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:18:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:18:27 IST" duration-ms="16944" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Intentionally failing in OutPatient module"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the Outpatient Module"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:18:27 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:18:40 IST" duration-ms="12579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Searching the report and downloading the pdf"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the User Login feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:18:40 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:18:58 IST" duration-ms="17989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Adding the payment details"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the User Login feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:18:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:19:10 IST" duration-ms="12636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Sorting the component issue using component name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the User Login feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:19:10 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-11-28T11:19:30 IST" duration-ms="20012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Sending chat to the staff member"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Checking the User Login feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestRunner@16ec5519]" started-at="2023-11-28T11:19:30 IST" name="tearDownClass" finished-at="2023-11-28T11:19:34 IST" duration-ms="3468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
